#!/bin/bash

if [ -f "include/startup.sh" ]; then
    . include/startup.sh
elif [ -f "../include/startup.sh" ]; then
    . ../include/startup.sh
fi

checkTagExist enable-ssl.success

rootDir=$(rootDir)
ubuntu_version=$(lsb_release -rs)

echo "Downloading Prometheus from Git" | log
cd $rootDir/temp
curlDownload https://github.com/prometheus/prometheus/releases/download/v3.4.2/prometheus-3.4.2.linux-amd64.tar.gz
waitOrStop 0 "File not downloaded from official source"


echo "Extracting Prometheus" | log
tar -xzvf prometheus-3.4.2.linux-amd64.tar.gz
waitOrStop 0 "Failed to extract application archive"
echo "Creating directories" | log
cd prometheus-3.4.2.linux-amd64
mkdir -p /etc/prometheus
mkdir -p /var/lib/prometheus
mv prometheus promtool /usr/local/bin/
mv consoles/ console_libraries/ /etc/prometheus/
mv prometheus.yml /etc/prometheus/prometheus.yml
echo "Configruing SSL" | log
if [[ ! -f /etc/letsencrypt/live/${CWM_DOMAIN}/cert.pem ]]; then
	cp /etc/letsencrypt/live/${CWM_DOMAIN}/fullchain.pem /etc/prometheus/
	cp /etc/letsencrypt/live/${CWM_DOMAIN}/privkey.pem /etc/prometheus/
cat << EOF > /etc/prometheus/web-config.yml
tls_server_config:
# Certificate and key files for server to use to authenticate to client.
  cert_file: /etc/prometheus/fullchain.pem
  key_file: /etc/prometheus/privkey.pem
EOF
else
	cp /etc/letsencrypt/live/${CWM_DOMAIN}/cert.pem /etc/prometheus/
	cp /etc/letsencrypt/live/${CWM_DOMAIN}/privkey.pem /etc/prometheus/
	cat << EOF > /etc/prometheus/web-config.yml
tls_server_config:
# Certificate and key files for server to use to authenticate to client.
  cert_file: /etc/prometheus/cert.pem
  key_file: /etc/prometheus/privkey.pem
EOF
fi

echo "Creating Prometheus group and user" | log
groupadd --system prometheus
useradd -s /sbin/nologin --system -g prometheus prometheus

echo "Granting permissions" | log
chown -R prometheus:prometheus /etc/prometheus/  /var/lib/prometheus/
chmod -R 775 /etc/prometheus/ /var/lib/prometheus/

echo "Creating Prometheus service" | log
cat << EOF > /etc/systemd/system/prometheus.service

[Unit]
Description=Prometheus
Wants=network-online.target
After=network-online.target

[Service]
User=prometheus
Group=prometheus
Restart=always
Type=simple
ExecStart=/usr/local/bin/prometheus \
    --config.file=/etc/prometheus/prometheus.yml \
    --web.config.file=/etc/prometheus/web-config.yml \
    --storage.tsdb.path=/var/lib/prometheus/ \
    --web.console.templates=/etc/prometheus/consoles \
    --web.console.libraries=/etc/prometheus/console_libraries \
    --web.listen-address=0.0.0.0:9090

[Install]
WantedBy=multi-user.target

EOF

echo "Adding Prometheus port to UFW" | log
ufw allow 9090

echo "Strating and enabling services" | log
systemctl daemon-reload
waitOrStop 0 "Reloading daemon failed"
systemctl start prometheus
sleep 2
waitOrStop 0 "Start Prometheus service failed"
systemctl enable prometheus
sleep 1

echo "Adding descriptions" | log
descriptionAppend ""
descriptionAppend "Prometheus web UI:https://${CWM_DOMAIN}:9090"
descriptionAppend ""

tagScript success

exit 0
