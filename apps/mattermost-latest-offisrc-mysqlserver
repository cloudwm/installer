#!/bin/bash

# Add this at the begining of all scripts.
if [ -f "include/startup.sh" ]; then
    . include/startup.sh
elif [ -f "../include/startup.sh" ]; then
    . ../include/startup.sh
fi

checkTagExist mysqld.success

appPath="/opt/mattermost"
confFile="/opt/mattermost/config/config.json"
rootDir=$(rootDir)
mmuser_name="mmuser"
mmuser_password=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 16 ; echo ''`
ubuntu_version=$(lsb_release -rs)

if [[ $ubuntu_version == 24.04 ]]; then
	appVersion=10.9.1
else
	appVersion=5.35.3
fi

echo "Preparing database for application" | log
mysql --defaults-file=/root/.my.cnf -h localhost <<EOF
CREATE USER '${mmuser_name}'@'127.0.0.1' IDENTIFIED BY '${mmuser_password}';
CREATE DATABASE mattermost;
GRANT ALL PRIVILEGES ON mattermost.* TO '${mmuser_name}'@'127.0.0.1';
FLUSH PRIVILEGES;
EOF

echo "Downloading and extracting application" | log
mkdir -p $appPath
cd $rootDir/temp
curlDownload https://releases.mattermost.com/$appVersion/mattermost-$appVersion-linux-amd64.tar.gz
waitOrStop 0 "File not downloaded from official source"
tar -xvzf mattermost*.gz
waitOrStop 0 "Failed to extract archive"

cd mattermost
mv * $appPath/
mkdir -p $appPath/data

echo "Preparing system users for application" | log
useradd --system --user-group mattermost
chown -R mattermost:mattermost $appPath
chmod -R g+w $appPath

if [[ $ubuntu_version == 24.04 ]]; then
    jq '.SqlSettings.DriverName = "mysql"' $confFile > tmp.$$.json && mv tmp.$$.json $confFile
    jq --arg datasource "${mmuser_name}:${mmuser_password}@tcp(127.0.0.1:3306)/mattermost?charset=utf8mb4,utf8&readTimeout=30s&writeTimeout=30s" \
   '.SqlSettings.DataSource = $datasource' $confFile > tmp.$$.json && mv tmp.$$.json $confFile
else
    $appPath/bin/mattermost config set SqlSettings.DriverName mysql
    dataSource="${mmuser_name}:${mmuser_password}@tcp(127.0.0.1:3306)/mattermost?charset=utf8mb4,utf8&readTimeout=30s&writeTimeout=30s"
    $appPath/bin/mattermost config set SqlSettings.DataSource $dataSource
fi

chown mattermost:mattermost $confFile

echo "Setting up application as a system service" | log
cat << EOF > /lib/systemd/system/mattermost.service
[Unit]
Description=Mattermost
After=network.target

[Service]
Type=notify
ExecStart=${appPath}/bin/mattermost
TimeoutStartSec=3600
Restart=always
RestartSec=10
WorkingDirectory=${appPath}
User=mattermost
Group=mattermost
LimitNOFILE=49152

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
waitOrStop 0 "Reload systemctl failed"
systemctl enable mattermost.service
systemctl start mattermost.service
waitOrStop 0 "Starting mattermost service failed"

echo "Allowing MatterMost App in UFW"
ufw allow 8065

echo "Adding descriptions" | log
descriptionAppend "Mattermost Database Username: ${mmuser_name}"
descriptionAppend "Mattermost Database Password: ${mmuser_password}"
descriptionAppend " "
descriptionAppend "Mattermost Web UI: http://${CWM_DISPLAYED_ADDRESS}:8065"
descriptionAppend "# Open Web UI to set Admin Username and Password"
descriptionAppend " "

tagScript success

exit 0
