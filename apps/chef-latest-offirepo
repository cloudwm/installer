#!/bin/bash

if [ -f "include/startup.sh" ]; then
    . include/startup.sh
elif [ -f "../include/startup.sh" ]; then
    . ../include/startup.sh
fi

appPath=/var/chef
rootDir=$(rootDir)

echo "Installing Chef Workstation dependencies from apt" | log
installPackage wget curl
waitOrStop 0 "Failed to install dependencies"

echo "Downloading Chef Workstation 24.6.1066" | log
wget https://packages.chef.io/files/stable/chef-workstation/24.6.1066/ubuntu/22.04/chef-workstation_24.6.1066-1_amd64.deb
waitOrStop "Failed to download Chef Workstation package"

echo "Installing Chef Workstation" | log
dpkg -i chef-workstation_24.6.1066-1_amd64.deb
apt-get install -f -y
waitOrStop 0 "Failed to install Chef Workstation"

echo "Verifying Chef Workstation installation" | log
chef --version | grep "Chef Workstation version: 24.6.1066" || { echo "Chef Workstation 24.6.1066 not installed correctly" | log; exit 1; }

echo "Creating Chef repository directory" | log
mkdir -p $appPath/chef-repo
cd $appPath/chef-repo
chef generate repo . --chef-license accept
waitOrStop "Failed to create Chef repository"

echo "Downloading Chef Infra Server 15.0.9" | log
wget https://packages.chef.io/files/stable/chef-server/15.0.9/ubuntu/22.04/chef-server-core_15.0.9-1_amd64.deb
waitOrStop "Failed to download Chef Infra Server package"

echo "Installing Chef Infra Server" | log
dpkg -i chef-server-core_15.0.9-1_amd64.deb
apt-get install -f -y
waitOrStop 0 "Failed to install Chef Infra Server"

echo "Configuring Chef Infra Server" | log
chef-server-ctl reconfigure --chef-license accept
waitOrStop 0 "Failed to configure Chef Infra Server"

echo "Installing Chef Manage for web UI" | log
chef-server-ctl install chef-manage
chef-server-ctl reconfigure
chef-manage-ctl reconfigure --accept-license
waitOrStop 0 "Failed to install or configure Chef Manage"

echo "Creating Chef admin user and organization" | log
mkdir -p $appPath/.chef
chef-server-ctl user-create admin Admin User admin@example.com "${ADMINPASSWORD}" --filename $appPath/.chef/admin.pem
if [ $? -ne 0 ]; then
    echo "Failed to create Chef admin user" | log
    exit 1
fi
chef-server-ctl org-create myorg "My Organization" --association_user admin --filename $appPath/.chef/myorg.pem
waitOrStop "Failed to create Chef organization"

echo "Configuring knife for Workstation" | log
cat << EOF > $appPath/chef-repo/.chef/config.rb
current_dir = File.dirname(__FILE__)
log_level                :info
log_location             STDOUT
node_name                "admin"
client_key               "#{current_dir}/admin.pem"
chef_server_url          "https://${CWM_DOMAIN}/organizations/myorg"
cookbook_path            ["#{current_dir}/../cookbooks"]
EOF

echo "Creating Chef service" | log
cat << EOF > /etc/systemd/system/chef-workstation.service
[Unit]
Description=Chef Workstation CLI
After=network.target
[Service]
StandardOutput=syslog
StandardError=syslog
SyslogIdentifier=chef-workstation
User=root
ExecStart=/opt/chef-workstation/bin/chef-client --local-mode --config $appPath/chef-repo/.chef/config.rb
Restart=always
[Install]
WantedBy=multi-user.target
EOF

echo "Enabling and starting Chef Workstation service" | log
systemctl daemon-reload
systemctl enable chef-workstation.service
systemctl start chef-workstation.service
waitOrStop 0 "Failed to start Chef Workstation service"

echo "Adding descriptions" | log
descriptionAppend "Chef Workstation is installed and running in local mode."
descriptionAppend "Chef Infra Server and Chef Manage are installed for web UI access."
descriptionAppend "Chef repository directory: $appPath/chef-repo"
descriptionAppend "Chef configuration file: $appPath/chef-repo/.chef/config.rb"
descriptionAppend "Chef Workstation CLI: /opt/chef-workstation/bin/chef"
descriptionAppend "Chef Manage Web UI: https://${CWM_DOMAIN}/"
descriptionAppend "Chef Manage Admin: admin"
descriptionAppend "Chef Manage Password: ${ADMINPASSWORD}"
descriptionAppend "To create cookbooks, run: cd $appPath/chef-repo && chef generate cookbook <name>"
descriptionAppend " "

tagScript success

exit 0
