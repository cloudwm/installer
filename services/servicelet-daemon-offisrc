#!/bin/bash

#
# cwm servicelet daemon installer
#

if [ -f "include/startup.sh" ]; then
    . include/startup.sh
elif [ -f "../include/startup.sh" ]; then
    . ../include/startup.sh
fi

if [ ! -f "${CWM_CONFIGFILE}" ]; then
    echo "missing guest configuration file, aborting" | log 1
    exit 1
fi

DAEMON_URL="https://github.com/cloudwm/servicelet/releases/download/0.2-beta/serviceletd.zip"
SERVICELET_PATH=/opt/servicelet
DAEMON_PATH=$SERVICELET_PATH/serviceletd
DAEMON_SETTINGS_PATH=$SERVICELET_PATH/servicelet.ini
DAEMON_SOCKET=/tmp/slet.sock
SERVICE_PATH=$SERVICELET_PATH/service.py
SERVICE_LOG_PATH=$SERVICELET_PATH/service.log
USER_GROUP="slet"
CWM_TARGET_URL="https://www.cloudwm.com"


# create user and group if not exists
function create_user() {
    # group
    if ! grep -q "^${USER_GROUP}:" "/etc/group"; then
        if ! groupadd "${USER_GROUP}"; then
            echo "failed to create group ${USER_GROUP}" | log 1
            return 1
        fi
    fi
    # user
    if ! id -u "${USER_GROUP}" >/dev/null 2>&1; then
        if ! useradd -r -m -N "${USER_GROUP}"; then
            echo "failed to create user ${USER_GROUP}" | log 1
            return 1
        fi
    fi
    # add user to group
    if ! groups "${USER_GROUP}" | grep -q ": \b${USER_GROUP}\b" && ! usermod -a -G "${USER_GROUP}" "${USER_GROUP}"; then
        echo "failed to add user to group" | log 1
        return 1
    fi
    return 0
}

# clears existing daemon installation
function daemon_cleanup() {
    if systemctl list-unit-files | grep -q servicelet.service; then
        # remove service
        systemctl stop servicelet.service
        systemctl disable servicelet.service
    fi
    # remove daemon installation
    if [ -f "${DAEMON_PATH}" ]; then
        "${DAEMON_PATH}" remove
    fi
    if [ -f "${DAEMON_SOCKET}" ] && ! rm -f "${DAEMON_SOCKET}"; then
        echo "failed to clear old socket" | log 1
        return 1
    fi
    if [ -f "${DAEMON_PATH}" ]; then
        rm -f "${DAEMON_PATH}"
    fi
    if [ -f "${DAEMON_SETTINGS_PATH}" ]; then
        rm -f "${DAEMON_SETTINGS_PATH}"
    fi
}

# write daemon configuration and install on system
function daemon_install() {
    
    apt install -y unzip
    checkPackageInstalled unzip

    if ! mkdir -p $SERVICELET_PATH; then
        echo "failed to create service path" | log 1
        return 1
    fi

    local zipPath="${DAEMON_PATH}.zip"
    local unzipPath=$SERVICELET_PATH/
    curlDownload "${DAEMON_URL}" "${zipPath}"
    if ! unzip "${zipPath}" -d "${unzipPath}"; then
        echo "failed to unzip daemon" | log 1
        return 1
    fi
    rm -f "${zipPath}"

    if ! chmod u+x "${DAEMON_PATH}"; then
        echo "failed to set execute permission to server" | log 1
        return 1
    fi
    
    # write configuration
cat << EOF > ${DAEMON_SETTINGS_PATH}
[servicelet]
id = ${CWM_UUID}
host = ${CWM_TARGET_URL}
service = ${SERVICE_PATH}
logPath = ${SERVICE_LOG_PATH}
apiKey = ${CWM_APICLIENTID}
apiSecret = ${CWM_APISECRET}
socket = ${DAEMON_SOCKET}
pullInterval = 15
clientTimeout = 20
runAs = ${USER_GROUP}
EOF

    touch "${SERVICE_LOG_PATH}"
    chown -R "${USER_GROUP}:${USER_GROUP}" $SERVICELET_PATH

    # install daemon
    if ! "${DAEMON_PATH}" install; then
        echo "service installation failed" | log 1
        return 1
    fi
    # run service as user
    if ! sed -i '/\[Service\]/a User=slet\nGroup=slet' /etc/systemd/system/servicelet.service || ! systemctl daemon-reload; then
        echo "service installation failed, could not set service user" | log 1
        return 1
    fi
    # start daemon
    if ! systemctl start servicelet.service; then
        echo "failed to start service" | log 1
        return 1
    fi

    return 0

}

# remove existing daemon (if exists)
daemon_cleanup
# create users and groups
if ! create_user; then
    echo "user or group failed, aborting" | log 1
    exit 1
fi
if ! daemon_install; then
    echo "service installation failed, aborting" | log 1
    exit 1
fi

tagScript success

exit 0
