#!/bin/bash

if [ -f "include/startup.sh" ]; then
    . include/startup.sh
elif [ -f "../include/startup.sh" ]; then
    . ../include/startup.sh
fi

rootDir="$(rootDir)"
updateStatus="$rootDir/include/updateInstallStatus.sh"
HTML_PATH="/var/www/html/index.html"

MACHINE_IP=$(hostname -I | awk '{print $1}')
DOMAIN_NAME="$(echo "$MACHINE_IP" | tr '.' '-')".cloud-xip.com

configure_firewall() {
	apt update
	apt install -y ufw
	ufw --force enable
	
	ufw allow ssh
	ufw allow 3000/tcp
	ufw allow 7000/tcp
	ufw allow 7001/tcp
	ufw allow 7199/tcp
	ufw allow 9042/tcp
	ufw allow 9160/tcp
	
	systemctl restart ufw
}

install_docker() {
    if command -v docker >/dev/null 2>&1; then
        echo "Docker is already installed. Skipping Docker installation." | log
        return
    fi

    echo "Adding docker GPG key..." | log
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
      | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod a+r /etc/apt/keyrings/docker.gpg

    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
      https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" \
      > /etc/apt/sources.list.d/docker.list

    echo "Installing Docker engine & plugins..." | log
    apt update
    apt install -y \
        docker-ce \
        docker-ce-cli \
        containerd.io \
        docker-buildx-plugin \
        docker-compose-plugin

    echo "Enabling & Starting docker service..."
    systemctl enable --now docker

    echo "Docker installation completed successfully." | log
    echo "Verify with:  sudo docker run hello-world" | log
}

install_cassandra() {
    echo "Checking for existing Cassandra container..." | log
    if docker ps -a --format '{{.Names}}' | grep -q '^cassandra$'; then
        echo "Cassandra container already exists. Skipping installation." | log
        return
    fi

    echo "Pulling Apache Cassandra Docker image..." | log
    docker pull cassandra:latest

    echo "Starting Cassandra container..." | log
    docker run -d \
        --name cassandra \
        --restart unless-stopped \
        -p 7000:7000 \
        -p 7001:7001 \
        -p 7199:7199 \
        -p 9042:9042 \
        -p 9160:9160 \
        cassandra:latest

    echo "Waiting for Cassandra to initialize..." | log
    sleep 40

    echo "Verifying Cassandra container status..." | log
    if docker ps | grep -q cassandra; then
        echo "Cassandra container is running successfully." | log
    else
        echo "Cassandra container failed to start. Check logs with: docker logs cassandra" | log
        exit 1
    fi

    echo "Testing CQLSH connectivity..." | log
    docker exec cassandra cqlsh -e "SHOW VERSION;" >/dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "Cassandra CQLSH is responding." | log
    else
        echo "CQLSH failed. Verify container health." | log
    fi
}

install_cassandra_web() {
    echo "Checking for existing Cassandra Web container..." | log
    if docker ps -a --format '{{.Names}}' | grep -q '^cassandra-web$'; then
        echo "Cassandra Web container already exists. Skipping installation." | log
        return
    fi

    echo "Pulling Cassandra Web Docker image..." | log
    docker pull orzhaha/cassandra-web:latest

    echo "Starting Cassandra Web container..." | log
    docker run -d \
        --name cassandra-web \
        --restart unless-stopped \
        -p 3000:3000 \
        -e CASSANDRA_HOST="${MACHINE_IP}" \
        -e CASSANDRA_PORT=9042 \
        -e CASSANDRA_USER=cassandra \
        -e CASSANDRA_PASS=cassandra \
        -e CASSANDRA_KEYSPACE=system \
        orzhaha/cassandra-web:latest

    sleep 5
    if docker ps | grep -q cassandra-web; then
        echo "Cassandra Web UI is running at http://${MACHINE_IP}:3000" | log
    else
        echo "Cassandra Web UI failed to start. Check logs with: docker logs cassandra-web" | log
    fi
}

main () {
	configure_firewall
	
	"$updateStatus" "$HTML_PATH" -ap "Installing Docker..."
    install_docker
	
	"$updateStatus" "$HTML_PATH" -ap "Installing Cassandra..."
    install_cassandra

	"$updateStatus" "$HTML_PATH" -ap "Installing Cassandra Web UI..."
    install_cassandra_web
}

main
